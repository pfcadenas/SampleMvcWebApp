
@{
    ViewBag.Title = "Posts";
}

<h2>Posts</h2>

@if (TempData["message"] != null)
{
    <div class="text-success">@TempData["message"]</div><br />
}
@if (TempData["errorMessage"] != null)
{
    <div class="text-danger"><strong>@TempData["errorMessage"]</strong></div>
}

<p>
    This is a demonstration of <a href="https://github.com/JonPSmith/GenericServices" target="_blank">GenericServices'</a>
    database CRUD (Create, Read, Update/Edit and Delete) services done synchronously, i.e no wait states to improve web site capacity.
    (See @Html.ActionLink("Posts Async", "Index", "PostsAsync") for async versions of the same commands).
</p>
<p>
    Below you will see a table of posts which can be manipulated. We have chosen a POST as an example as it has the following attributes:
</p>
<ul>
    <li>When we list them we want 'shape' what the user sees, i.e. we leave out the post content but include the blogger Name and Tags.</li>
    <li>The create and edit commands are non-trivial because Posts links to other tables, like author and the tags.</li>
</ul>
<hr />

<div>
    <span>
        @if (Request.IsAuthenticated)
        { @Html.ActionLink("Create New Post", "Create") <span>|</span> @Html.ActionLink("Tags Page", "Index", "Tags")    <span>|</span> @Html.ActionLink("Blogs Page", "Index", "Blogs")    <span>|</span> @Html.ActionLink("Reset Blogs data", "Reset") }
    </span>
    <span class="pull-right"><strong>@Html.ActionLink("Explanation of the code", "CodeView")</strong></span>
</div>

<br>

<div style="margin:10px">
    <div class="form-inline pull-right">
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label">Content</label>
                <input id="content" name="content" type="text" value="@ViewData["content"]" class="form-control">
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label">Blog</label>
                <select id="blogsSelect" name="blog" type="text" value="" class="form-control">
                    <option value="0">--Seleccione--</option>
                </select>
            </div>
        </div>
        <button id="btnSearch" class="btn btn-sm btn-primary"><i class="glyphicon glyphicon-search"></i> Buscar</button>
    </div>
</div>

<table id="tablePosts" class="table">
    <thead>
        <tr>
            <th>
                Blogger Name
            </th>
            <th>
                Title
            </th>
            <th style="text-align:center">
                Like
            </th>
            <th>
                Last Updated
            </th>
            <th>
                Tag Names
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<span>
    @Html.ActionLink("Delay for 500ms (Sync)", "Delay")
    Useful for checking capacity of web server
</span>

@section scripts
    {
    <script>
        $(document).ready(function () {

            //Configuring datatable plugin
            $("#tablePosts").DataTable({
                "bFilter": false,
                "bProcessing": true,
                "bServerSide": true,
                "deferLoading": 0, 
                "ajax": {
                    url: "/api/post",
                    method: 'GET',
                    dataSrc: "aaData",
                    data: {
                        content: function () { return $('#content').val() },
                        blog: function () { return $('#blogsSelect').val() }
                    }
                },
                columns: [
                    {
                        data: "BloggerName",
                        width: "15%",
                        className: "text-center",
                        render: function (data, type, row, meta) {
                            return type === 'display' && data.length > 100 ?
                              '<span title="'+data+'">'+data.substr( 0, 98 )+'...</span>' :
                              data;
                        }
                    },
                    {
                        data: "Title",
                        className: "text-center"
                    },
                    {
                        data: "LikeCount",
                        className: "text-center",
                        render: function (data, type, row, meta) {
                            if (row.CanMakeLike && "@Request.IsAuthenticated" == "True") {
                                return "<i data-post-id='" + row.PostId + "' data-post-like='" + row.LikeCount + "' id='userLike' class='glyphicon glyphicon-thumbs-up' onclick='MakeLike(" + row.PostId + ")' style='color:#48b719;cursor:pointer'></i> " + data;
                            }
                            else {
                                return data;
                            }
                        }
                    },
                    {
                        data: "LastUpdated",
                        width: "13%",
                    },
                    {
                        data: "TagNames",
                        className: "text-center",
                    },
                    {
                        data: "PostId",
                        className: 'text-right',
                        width: "10%",
                        render: function (data, type, post) {

                            if ("@Request.IsAuthenticated" == "True") {
                                return "<span><a href='/Posts/Edit/" + data + "'><i class='glyphicon glyphicon-pencil'></i></a> <a href='/Posts/Details/" + data + "'><i class='glyphicon glyphicon-eye-open'></i></a> <a href='/Posts/Delete/" + data + "'><i class='glyphicon glyphicon-trash'></i></a></span>";
                            }
                            else {
                                return "<a href='/Posts/Details/" + data + "'>Details</a>";
                            }

                        }
                    }
                ]
            });

            $("#btnSearch").on('click', function () {
                $("#tablePosts").DataTable().ajax.reload();
            });

            //function for load filter Blog
            $.ajax({
                url: '/api/blogs',
                method: 'GET',
                success: function (blogs) {
                    for (var i = 0; i < blogs.length; i++) {
                        $('#blogsSelect').append('<option value="' + blogs[i].BlogId + '">' + blogs[i].Name + '</option>');
                    };
                    $('#blogsSelect').val(@ViewData["blog"]);
                    $("#tablePosts").DataTable().ajax.reload(); //load datatable data after load all Blog filters 
                }
            });

        });

        //function to make like to a post
        function MakeLike(PostID) {
            $.ajax({
                url: "/api/post/like/",
                method: "POST",
                data: {
                    PostID: PostID
                },
                success: function (response) {
                    $("#tablePosts").DataTable().ajax.reload();
                }
            });
        }
    </script>
}

